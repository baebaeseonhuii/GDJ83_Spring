<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
<mapper namespace="com.seonhui.app.members.MemberDAO">

	<insert id="addFile" parameterType="MemberFileDTO">
		INSERT INTO MEMBERFILES (FileNum, USERNAME, FileName, OriName)
		VALUES (FILE_SEQ.NEXTVAL, #{userName}, #{fileName}, #{oriName})
	</insert>
	
	<insert id="join" parameterType="MemberDTO">
		INSERT INTO USERS (ID, PHONE, PW, NAME, SS_NUM, EMAIL) 
		VALUES (#{id}, #{phone}, #{pw}, #{name}, #{ss_num}, #{email})
	</insert>
	
	<select id="login" parameterType="MemberDTO" resultMap="loginResult">
		SELECT ID, PW, NAME
		FROM USERS
		WHERE ID=#{id}
	</select>
	
	<select id="detail" parameterType="MemberDTO" resultMap="loginResult">
		SELECT U.*, A.*, M.*
			FROM USERS U
			LEFT JOIN
			ACCOUNTS A
			ON U.ID = A.ID
			
			LEFT JOIN 
			MEMBERFILES M
			ON U.ID = M.USERNAME
		WHERE U.ID = #{id}
	</select>
	
	<resultMap type="MemberDTO" id="loginResult">
	<!--  primary key 용도 -->
	<!-- colume="컬럼명" property="setter이름" -->
		<id column="ID" property="id"/>
		<!-- pk 외 나머지 용도 -->
		<result column="PHONE" property="phone"/>
		<result column="PW" property="pw"/>
		<result column="NAME" property="name"/>
		<result column="SS_NUM" property="ss_num"/>
		<result column="EMAIL" property="email"/>
		<!-- 1:1 , 멤버: 멤버파일 -->
		<association property="memberFileDTO" javaType="MemberFileDTO">
			<id column="FILENUM" property="fileNum"/>
			<result column="FILENAME" property="fileName"/>
			<result column="ORINAME" property="oriName"/>
		</association>
		
		<!-- 1:N , 멤버:계좌-->
		<collection property="dtos" javaType="java.util.List" ofType="AccountDTO">
			<id column="AC_NUM" property="ac_num"/>
			<result column="ID" property="id"/>
			<result column="P_CODE" property="p_code"/>
			<result column="ACCOUNT_BALANCE" property="account_balance"/>
			<result column="ACCOUNT_DATE" property="account_date"/>
		</collection>
	</resultMap> 
	
	<update id="update" parameterType="MemberDTO">
		UPDATE USERS SET ID=#{id}, PHONE=#{phone}, NAME=#{name}, SS_NUM=#{ss_num}, EMAIL=#{email} WHERE ID=#{id}
	</update>
	
	<delete id="delete" parameterType="MemberDTO">
		DELETE FROM USERS WHERE ID = #{id}
	</delete>
	
	
</mapper>